@model Pages.IndexModel

@{
    int nextPage = Model.CurrentPage < Model.Products.TotalPages ? Model.CurrentPage + 1 : Model.CurrentPage;
    int prevPage = Model.CurrentPage - 1;
}

<ul class="pagination justify-content-center mt-3 flex-wrap ">
    <li class="page-item">
        <a class="page-link"
           hx-target="#results"
           hx-get
           hx-page="Index"
           hx-route-query="@Model.Query"
           hx-route-sortvalue="@Model.SortValue"
           hx-route-paginationsize="@Model.PaginationSize"
           hx-route-currentpage="1"
           hx-swap="innerHTML show:#container:top">
            Algusesse
        </a>
    </li>

    <li class="page-item @(Model.Products.HasPreviousPage ? "" : "disabled")">
        <a class="page-link"
           hx-target="#results"
           hx-get
           hx-page="Index"
           hx-route-query="@Model.Query"
           hx-route-sortvalue="@Model.SortValue"
           hx-route-paginationsize="@Model.PaginationSize"
           hx-route-currentpage="@prevPage"
           hx-swap="innerHTML show:#container:top"
           aria-disabled="@(Model.Products.HasPreviousPage ? "false" : "true")">
            Eelmine
        </a>
    </li>

    @if (Model.Products.HasPreviousPage)
    {
        <li class="page-item">
            <a class="page-link"
               hx-get
               hx-page="Index"
               hx-target="#results"
               hx-route-query="@Model.Query"
               hx-route-sortvalue="@Model.SortValue"
               hx-route-paginationsize="@Model.PaginationSize"
               hx-route-currentpage="@prevPage"
               hx-swap="innerHTML show:#container:top">
                @prevPage
            </a>
        </li>
    }

    <li class="page-item active">
        <a class="page-link">@Model.CurrentPage</a>
    </li>

    @if (Model.Products.HasNextPage)
    {
        <li class="page-item">
            <a class="page-link"
               hx-get
               hx-page="Index"
               hx-target="#results"
               hx-route-currentpage="@nextPage"
               hx-route-query="@Model.Query"
               hx-route-sortvalue="@Model.SortValue"
               hx-route-paginationsize="@Model.PaginationSize"
               hx-swap="innerHTML show:#container:top">
                @nextPage
            </a>
        </li>
    }

    <li class="page-item @(Model.Products.HasNextPage ? "" : "disabled")">
        <a class="page-link"
           hx-get
           hx-page="Index"
           hx-target="#results"
           hx-route-query="@Model.Query"
           hx-route-sortvalue="@Model.SortValue"
           hx-route-paginationsize="@Model.PaginationSize"
           hx-route-currentpage="@nextPage"
           hx-swap="innerHTML show:#container:top"
           aria-disabled="@(Model.Products.HasNextPage ? "false" : "true")">
            Järgmine
        </a>
    </li>

    <li class="page-item">
        <a class="page-link"
           hx-get
           hx-page="Index"
           hx-target="#results"
           hx-route-query="@Model.Query"
           hx-route-sortvalue="@Model.SortValue"
           hx-route-paginationsize="@Model.PaginationSize"
           hx-route-currentpage="@Model.Products.TotalPages"
           hx-swap="innerHTML show:#container:top">
            Lõppu (@Model.Products.TotalPages)
        </a>
    </li>
</ul>